allprojects {
    apply plugin: 'idea'
    apply from: "$rootDir/gradle/jacoco.gradle"

    repositories {
        mavenCentral()
        jcenter()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    ext.configDir = new File(rootDir, 'config')
    apply from: "$rootDir/gradle/checkstyle.gradle"
    apply from: "$rootDir/gradle/pmd.gradle"
    apply from: "$rootDir/gradle/findbugs.gradle"
    apply from: "$rootDir/gradle/jdepend.gradle"

    test {
        useTestNG() {
            suites "src/test/resources/testng.xml"
        }
        testLogging {
            // Enable full logging for tests execution
            setLifecycle(testLogging.debug)
            // Run tests in forks, in chunks of 5
            forkEvery = 5
            maxParallelForks = Runtime.runtime.availableProcessors()
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
    // Ensure downloading zip with sources and docs
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}


task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    def publishedProjects = subprojects.findAll()
    description = 'Generates an aggregate report from all subprojects'

    dependsOn(publishedProjects.check)

    additionalSourceDirs = files(publishedProjects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(publishedProjects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(publishedProjects.sourceSets.main.output)
    executionData = files(publishedProjects.jacocoTestReport.executionData)
    reports {
        html.enabled = true // human readable
        xml.enabled = true // required by coveralls
    }

    onlyIf = {
        true
    }

    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}
