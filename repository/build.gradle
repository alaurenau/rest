apply from: 'elastic.gradle'

sourceSets {
    integrationTest {
        java.srcDir file('src/integration-test/java')
        resources.srcDir file('src/integration-test/resources')
        compileClasspath += main.output + configurations.testRuntime
        runtimeClasspath += compileClasspath
    }
}

dependencies {
    compile project(':api')
    compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.elasticsearch.client:transport:${elasticVersion}"
    compile "com.google.code.gson:gson:${gsonVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "org.apache.logging.log4j:log4j-to-slf4j:${log4j2AdapterVersion}"
    compile "org.slf4j:jcl-over-slf4j:${jclAdapterVersion}"
    testCompile "org.testng:testng:${testngVersion}"
    integrationTestCompile "org.springframework:spring-test:${springVersion}"
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath

    useTestNG {
        suites "src/integration-test/resources/testng.xml"
    }

    reports {
        html.destination = file("$reports.html.destination/integration")
        junitXml.destination = file("$reports.junitXml.destination/integration")
    }

    // Enable full logging for tests execution
    testLogging.setLifecycle(testLogging.debug)

    dependsOn tasks.startElastic
    finalizedBy tasks.stopElastic
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test